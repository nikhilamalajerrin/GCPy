name: Python CI

on:
  push:
    branches: [ main ]
    paths:
      - '**.py'
      - 'requirements*.txt'
      - 'Makefile'
      - '.github/workflows/python.yml'
      - 'test_plan*.json'
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Test (${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install deps
        run: |
          python -m pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # Dev tools used by Makefile targets
          pip install black isort ruff mypy pytest build
          # Editable install so imports like `plancosts.*` work
          pip install -e .

      - name: Static checks
        run: |
          # Use Makefile if present, else run tools directly
          if [ -f Makefile ]; then
            make fmt    || true      # formatting check is non-blocking
            make lint   || true
            make typecheck || true
          else
            black --check .
            isort --check-only .
            ruff check .
            mypy plancosts || true
          fi

      - name: Unit tests
        run: |
          if [ -f Makefile ]; then
            make test
          else
            pytest -q
          fi

      - name: Mock self-tests (regex/tenancy/fixtures)
        env:
          SELF_TEST: "1"
        run: |
          python mock_pricing_api.py

      - name: CLI smoke with fixtures (table)
        env:
          PLANCOSTS_API_URL: http://127.0.0.1:4000
        run: |
          python mock_pricing_api.py &
          sleep 1
          if [ -f "test_plan_ern.json" ]; then python main.py --tfjson test_plan_ern.json -o table; fi
          if [ -f "test_plan_rds.json" ]; then python main.py --tfjson test_plan_rds.json -o table; fi
          if [ -f "test_plan.json" ]; then python main.py --tfjson test_plan.json -o table; fi
