name: plancosts-diff

on:
  pull_request:
    paths:
      - "**/*.tf"
      - "**/*.tfvars"
      - "plancosts/**"
      - "main.py"
      - ".github/workflows/plancosts-diff.yml"

permissions:
  contents: read
  pull-requests: write

env:
  TERRAFORM_DIR: examples/terraform_0_13
  PLANCOSTS_API_URL: http://127.0.0.1:4000

jobs:
  cost-diff:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout base (merge target)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
          fetch-depth: 0

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr
          fetch-depth: 0

      - name: Set up Python (for mock server)
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps in PR tree (for mock server)
        shell: bash
        working-directory: pr
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip
          if [[ -f pyproject.toml ]]; then
            pip install -e .
          elif [[ -f requirements.txt ]]; then
            pip install -r requirements.txt
          else
            pip install pytest
          fi

      - name: Start mock pricing API
        shell: bash
        env:
          PYTHONUNBUFFERED: "1"
          # Make sure package imports resolve
          PYTHONPATH: ${{ github.workspace }}/pr:${{ github.workspace }}/pr/plancosts
        run: |
          set -euxo pipefail
          cd pr
          nohup python plancosts/plancosts/tests/mock_price.py > ../mock_server.log 2>&1 &
          echo $! > ../mock_pid.txt
          sleep 1
          kill -0 "$(cat ../mock_pid.txt)"

      - name: Wait for mock API readiness
        shell: bash
        run: |
          set -euxo pipefail
          for i in {1..60}; do
            code="$(curl -s -o /dev/null -w '%{http_code}' -X POST "${PLANCOSTS_API_URL}/graphql" || true)"
            [[ "$code" = "200" ]] && echo "Mock API ready" && exit 0
            sleep 0.5
          done
          echo "Mock not ready. Log tail:"; tail -n 200 mock_server.log || true
          exit 1

      # BASE
      - name: Run plancosts (BASE) via external action
        id: base
        uses: nikhilamalajerrin/james-tf-action/.github/actions/plancosts@v0.1.9
        with:
          file_prefix: base
          terraform_dir: ${{ github.workspace }}/base/${{ env.TERRAFORM_DIR }}
          api_url: http://host.docker.internal:4000

      # PR
      - name: Run plancosts (PR) via external action
        id: prrun
        uses: nikhilamalajerrin/james-tf-action/.github/actions/plancosts@v0.1.9
        with:
          file_prefix: pr
          terraform_dir: ${{ github.workspace }}/pr/${{ env.TERRAFORM_DIR }}
          api_url: http://host.docker.internal:4000

      - name: Create diff
        shell: bash
        run: |
          set -euxo pipefail
          BASE_TXT="base-plancosts.txt"
          PR_TXT="pr-plancosts.txt"
          test -f "$BASE_TXT" || (echo "Missing $BASE_TXT" && exit 1)
          test -f "$PR_TXT" || (echo "Missing $PR_TXT" && exit 1)

          awk '/^OVERALL TOTAL/ {print $NF; exit}' "$BASE_TXT" > base-total.txt || echo "0.00" > base-total.txt
          awk '/^OVERALL TOTAL/ {print $NF; exit}' "$PR_TXT"   > pr-total.txt   || echo "0.00" > pr-total.txt

          diff -u "$BASE_TXT" "$PR_TXT" | tail -n +3 > diff.txt || true
          echo "Base total: $(cat base-total.txt)"
          echo "PR total:   $(cat pr-total.txt)"

      - name: Comment with cost diff
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          old="$(cat base-total.txt 2>/dev/null || echo "0.00")"
          new="$(cat pr-total.txt 2>/dev/null || echo "0.00")"
          diff_content="$(cat diff.txt 2>/dev/null || echo "No differences detected")"

          change_text=""
          if echo "$old $new" | grep -Eq '^[0-9]+(\.[0-9]+)? [0-9]+(\.[0-9]+)?$' && [ "$old" != "0" ] && [ "$old" != "0.00" ]; then
            change_text="$(awk -v old="$old" -v new="$new" 'BEGIN { pct=((new-old)/old)*100; printf " (%+.2f%%)", pct }')"
          fi

          printf '%s' "$diff_content" > diff_body.txt
          body="$(jq -n \
            --arg old "$old" \
            --arg new "$new" \
            --arg change "$change_text" \
            --rawfile diff diff_body.txt \
            '{body: ("## ðŸ’° Cost Impact\n\n**Base monthly cost:** $" + $old + "\n**PR monthly cost:** $" + $new + $change + "\n\n<details><summary>ðŸ“Š Detailed plancosts diff</summary>\n\n```diff\n" + $diff + "\n```\n</details>")}'
          )"
          curl -sS -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d "$body"

      - name: Show mock log tail (if present)
        if: always()
        run: |
          if [[ -f pr/mock_pid.txt ]]; then
            echo "--- mock_server.log (tail) ---"
            tail -n 200 mock_server.log || true
          fi
