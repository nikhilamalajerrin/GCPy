name: plancosts-diff

on:
  pull_request:
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - 'plancosts/**'
      - 'main.py'
      - '.github/workflows/plancosts-diff.yml'

permissions:
  contents: read
  pull-requests: write

env:
  TERRAFORM_DIR: examples/terraform_0_13
  PLANCOSTS_API_URL: http://127.0.0.1:4000

jobs:
  cost-diff:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout base (merge target)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: base
          fetch-depth: 0

      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          path: pr
          fetch-depth: 0

      # Python is only needed to run the mock server from the PR tree
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (PR tree) for mock server
        shell: bash
        working-directory: pr
        run: |
          python -m pip install --upgrade pip
          if [[ -f pyproject.toml ]]; then
            pip install -e .
          elif [[ -f requirements.txt ]]; then
            pip install -r requirements.txt
          else
            pip install pytest
          fi

      - name: Verify PR install & import path
        shell: bash
        working-directory: pr
        run: |
          python - <<'PY'
import importlib
m = importlib.import_module("plancosts")
print("plancosts module path:", m.__file__)
PY

      - name: Start mock pricing API (background with logs)
        shell: bash
        env:
          PYTHONUNBUFFERED: "1"
        run: |
          set -euxo pipefail
          cd pr
          nohup python -m plancosts.tests.mock_price > ../mock_server.log 2>&1 &
          echo $! > ../mock_pid.txt
          sleep 0.5
          # Confirm the process is alive
          kill -0 "$(cat ../mock_pid.txt)"

      - name: Wait for mock API readiness (POST /graphql) + debug if fails
        shell: bash
        run: |
          set -euxo pipefail
          for i in {1..60}; do
            code=$(curl -s -o /dev/null -w "%{http_code}" -X POST "${PLANCOSTS_API_URL}/graphql" || true)
            if [[ "$code" == "200" ]]; then
              echo "Mock API ready"
              exit 0
            fi
            if (( i % 10 == 0 )); then
              echo "--- mock_server.log (tail) ---"
              tail -n 50 mock_server.log || true
              echo "------------------------------"
            fi
            sleep 0.5
          done
          echo "==== mock_server.log (full) ===="
          cat mock_server.log || true
          echo "==== listening sockets (hint) ==="
          command -v ss >/dev/null && ss -ltnp || true
          echo "Mock API failed readiness" >&2
          exit 1

      # Run your external action against BASE
      - name: Run plancosts (BASE) via external action
        id: base
        uses: nikhilamalajerrin/james-tf-action/.github/actions/plancosts@v0.1.1
        with:
          file_prefix: base
          terraform_dir: ${{ github.workspace }}/base/${{ env.TERRAFORM_DIR }}

      # Run your external action against PR
      - name: Run plancosts (PR) via external action
        id: prrun
        uses: nikhilamalajerrin/james-tf-action/.github/actions/plancosts@v0.1.1
        with:
          file_prefix: pr
          terraform_dir: ${{ github.workspace }}/pr/${{ env.TERRAFORM_DIR }}

      - name: Create diff
        shell: bash
        run: |
          set -euxo pipefail
          BASE_TXT="base-plancosts.txt"
          PR_TXT="pr-plancosts.txt"
          test -f "$BASE_TXT" || (echo "Missing $BASE_TXT" && exit 1)
          test -f "$PR_TXT" || (echo "Missing $PR_TXT" && exit 1)

          awk '/^OVERALL TOTAL/ {print $NF; exit}' "$BASE_TXT" > base-total.txt || echo "0.00" > base-total.txt
          awk '/^OVERALL TOTAL/ {print $NF; exit}' "$PR_TXT"   > pr-total.txt   || echo "0.00" > pr-total.txt

          diff -u "$BASE_TXT" "$PR_TXT" | tail -n +3 > diff.txt || true
          echo "Base total: $(cat base-total.txt)"
          echo "PR total:   $(cat pr-total.txt)"

      - name: Comment with cost diff
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          old=$(cat base-total.txt 2>/dev/null || echo "0.00")
          new=$(cat pr-total.txt 2>/dev/null || echo "0.00")
          diff_content=$(cat diff.txt 2>/dev/null || echo "No differences detected")

          change_text=""
          if [[ "$old" =~ ^[0-9]+(\.[0-9]+)?$ && "$new" =~ ^[0-9]+(\.[0-9]+)?$ && "$old" != "0" && "$old" != "0.00" ]]; then
            change_text=$(awk -v old="$old" -v new="$new" 'BEGIN { pct=((new-old)/old)*100; printf " (%+.2f%%)", pct }')
          fi

          body=$(jq -n \
            --arg old "$old" \
            --arg new "$new" \
            --arg change "$change_text" \
            --arg diff "$diff_content" \
            '{body: ("## ðŸ’° Cost Impact\n\n**Base monthly cost:** $" + $old + "\n**PR monthly cost:** $" + $new + $change + "\n\n<details><summary>ðŸ“Š Detailed plancosts diff</summary>\n\n```diff\n" + $diff + "\n```\n</details>")}')
          
          curl -L -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d "$body"

      - name: Stop mock pricing API
        if: always()
        shell: bash
        run: |
          if [[ -f mock_pid.txt ]]; then
            kill "$(cat mock_pid.txt)" || true
          fi
          echo "--- mock_server.log (tail on exit) ---"
          tail -n 100 mock_server.log || true
