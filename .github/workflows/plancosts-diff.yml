name: plancosts-diff-simple

on:
  pull_request:
    paths:
      - '**/*.tf'
      - '**/*.tfvars'
      - 'plancosts/**'
      - 'main.py'
      - '.github/workflows/plancosts-diff.yml'

permissions:
  contents: read
  pull-requests: write

env:
  PLANCOSTS_API_URL: http://127.0.0.1:4000

jobs:
  cost-diff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Get full history to access both branches

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo "PYTHONPATH=$GITHUB_WORKSPACE:$GITHUB_WORKSPACE/plancosts" >> $GITHUB_ENV

      - name: Start mock pricing API
        run: |
          echo "Starting mock pricing API..."
          python -m plancosts.tests.mock_price &
          sleep 2  # Simple wait for API startup

      - name: Run plancosts on base branch
        run: |
          # Save current changes
          git stash --include-untracked || true
          
          # Switch to base branch
          git checkout ${{ github.event.pull_request.base.sha }}
          
          # Run plancosts
          if [ -f "main.py" ]; then
            # Try with test file if no terraform dir
            if [ -f "test_plan_ern.json" ]; then
              python main.py --tfjson test_plan_ern.json -o table > base-plancosts.txt || echo "Base run failed"
            else
              echo "No test plan available for base"
              echo "OVERALL TOTAL: 0.00" > base-plancosts.txt
            fi
          else
            echo "main.py not found in base"
            echo "OVERALL TOTAL: 0.00" > base-plancosts.txt
          fi
          
          # Extract total
          grep "OVERALL TOTAL" base-plancosts.txt | awk '{print $NF}' > base-total.txt || echo "0.00" > base-total.txt

      - name: Run plancosts on PR branch
        run: |
          # Switch back to PR branch
          git checkout ${{ github.event.pull_request.head.sha }}
          
          # Restore any stashed changes
          git stash pop || true
          
          # Run plancosts
          if [ -f "test_plan_ern.json" ]; then
            python main.py --tfjson test_plan_ern.json -o table > pr-plancosts.txt
          elif [ -f "plancosts/test_plan_ern.json" ]; then
            python main.py --tfjson plancosts/test_plan_ern.json -o table > pr-plancosts.txt
          else
            echo "No test plan found"
            exit 1
          fi
          
          # Extract total
          grep "OVERALL TOTAL" pr-plancosts.txt | awk '{print $NF}' > pr-total.txt || echo "0.00" > pr-total.txt

      - name: Generate and post diff comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          base_cost=$(cat base-total.txt)
          pr_cost=$(cat pr-total.txt)
          
          # Create simple diff
          echo "Cost difference:" > comment.txt
          echo "Base: \$${base_cost}/month" >> comment.txt
          echo "PR: \$${pr_cost}/month" >> comment.txt
          
          # Simple percentage calculation with awk
          if [ "$base_cost" != "0.00" ]; then
            change=$(awk -v b="$base_cost" -v p="$pr_cost" 'BEGIN{printf "%.2f", ((p-b)/b)*100}')
            echo "Change: ${change}%" >> comment.txt
          fi
          
          # Add detailed diff if exists
          if diff -u base-plancosts.txt pr-plancosts.txt > full-diff.txt 2>&1; then
            echo "No differences in output" >> comment.txt
          else
            echo "" >> comment.txt
            echo "<details><summary>Detailed diff</summary>" >> comment.txt
            echo "" >> comment.txt
            echo '```diff' >> comment.txt
            tail -n +4 full-diff.txt >> comment.txt  # Skip diff header
            echo '```' >> comment.txt
            echo "</details>" >> comment.txt
          fi
          
          # Post comment using GitHub CLI (if available) or curl
          if command -v gh &> /dev/null; then
            gh pr comment ${{ github.event.pull_request.number }} --body-file comment.txt
          else
            # Use curl as fallback
            jq -Rs '{"body": .}' comment.txt > body.json
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${GITHUB_TOKEN}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
              -d @body.json
          fi